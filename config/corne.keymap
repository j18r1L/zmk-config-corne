/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT |  +  | LALT|
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 1 &kp LALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |     |     |     |     |     |   |     |     |  UP |     |     | DEL  |
// |      |     |     |     |     |     |   |     | LFT | DWN | RGT |     |      |
//                    | GUI |     | SPC |   | ENT |     |     |
                        bindings = <
   &trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7    &kp N8       &kp N9      &kp N0 	&kp BSPC
   &trans  &trans       &trans       &trans       &trans       &trans         &trans   &trans    &kp UP       &trans 	  &trans 	&kp DELETE
   &trans  &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT  &kp DOWN     &kp RIGHT   &trans 	&trans
                                     &kp LGUI     &trans       &kp SPACE      &kp RET  &trans    &trans
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     |     |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans  &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                           &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &trans
                        >;
                };

                tri_layer {

// -----------------------------------------------------------------------------------------
// |       | F1  | F2  | F3  | F4  | F5  |   |  F6 | F7  | F8  | F9  | F10 | BKSP |
// |       |     |     |     |     |     |   |     |     |  UP | F11 | F12 | DEL  |
// | BT_CL | BT0 | BT1 | BT2 | BT3 | BT4 |   |     | LFT | DWN | RGT |     |      |
//                     | GUI |     | SPC |   | ENT |     |     |
                        bindings = <
   &trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 	&kp F9    	&kp F10 &kp BSPC
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &trans   &kp UP 	&kp F11 	&kp F12 &kp DELETE
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp LEFT &kp DOWN     &kp RIGHT       &trans 	&trans
                                        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &trans
                        >;
                };
        };
};
